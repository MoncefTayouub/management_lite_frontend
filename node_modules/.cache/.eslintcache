[{"E:\\workspace\\tasks_managements_lits\\frontend\\src\\index.js":"1","E:\\workspace\\tasks_managements_lits\\frontend\\src\\reportWebVitals.js":"2","E:\\workspace\\tasks_managements_lits\\frontend\\src\\App.js":"3","E:\\workspace\\tasks_managements_lits\\frontend\\src\\pages\\Home.js":"4","E:\\workspace\\tasks_managements_lits\\frontend\\src\\pages\\Project.js":"5"},{"size":550,"mtime":1685448278876,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1685411990430,"results":"8","hashOfConfig":"7"},{"size":578,"mtime":1685493814742,"results":"9","hashOfConfig":"7"},{"size":4011,"mtime":1685635279403,"results":"10","hashOfConfig":"7"},{"size":14326,"mtime":1685638219817,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1o4wdlm",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":6,"source":"30"},"E:\\workspace\\tasks_managements_lits\\frontend\\src\\index.js",[],[],[],"E:\\workspace\\tasks_managements_lits\\frontend\\src\\reportWebVitals.js",[],[],"E:\\workspace\\tasks_managements_lits\\frontend\\src\\App.js",["31","32","33"],[],"import logo from './logo.svg';\nimport './App.css';\nimport React , {useState , useEffect} from 'react'\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Project from './pages/Project';\nfunction App() {\n  return (\n    <div className=\"App\">\n           <BrowserRouter>\n              <Routes>\n                    <Route path=\"/\" element={<Home    />} />    \n                    <Route path=\"/Project/:id\" element={<Project    />} />    \n                </Routes>\n          </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;",[],"E:\\workspace\\tasks_managements_lits\\frontend\\src\\pages\\Home.js",["34","35","36","37","38","39"],[],"E:\\workspace\\tasks_managements_lits\\frontend\\src\\pages\\Project.js",["40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62"],[],"import React , {useEffect , useState} from 'react'\r\nimport edit_btn from '../icons/edit_btn.svg'\r\nimport adding from '../icons/adding.svg'\r\nimport left_arrow from '../icons/left_arrow.svg'\r\nimport {useParams } from \"react-router-dom\"\r\nimport x_marque from '../icons/x_marque.svg'\r\nimport trash from '../icons/trash.svg'\r\nimport axios from 'axios'\r\n\r\nfunction Project() {\r\n    const params = useParams() ;\r\n    const [data , setDate] = useState()\r\n    const project_id = params.id\r\n    const [update , setUpdate]= useState(false)\r\n    const [task_edit_index , set_task_edit_index] = useState(-1)\r\n\r\n\r\n\r\n    // -------- reload data ----------------\r\n    useEffect(()=>{\r\n        getData();\r\n      },[update])    \r\n      let getData = async () => {\r\n\r\n        let respons = await fetch (`http://127.0.0.1:8000/task/${project_id}`)\r\n        let data = await respons.json()\r\n        setDate(data)\r\n        if (task_edit_index != -1 ) {\r\n          setSteps_list(data['tasks'][task_edit_index]['step'])\r\n        }\r\n    }\r\n\r\n    const [name , setName ] = useState('')\r\n    const [DDL , setDDL] = useState('')\r\n    const [x_marque_bol , set_x_marque] = useState(0)\r\n    const [step , setStep] = useState('')\r\n    const [steps_list , setSteps_list] = useState([])\r\n\r\n    // ---------- add task ---------------\r\n    const [task_id , set_task_id] = useState(-1)\r\n    const [task_ob , set_task_ob] = useState()\r\n    // if task_ob\r\n    // console.log(task_ob)\r\n    const handleSumbit_task = async ()=> {\r\n        const DataForm= new FormData();\r\n        DataForm.append('name',name)        \r\n        DataForm.append('DDL',DDL)        \r\n        var method = 'post'\r\n        if (task_ob) {\r\n            method = 'put'\r\n            DataForm.append('id',task_id)        \r\n        }\r\n        await axios ({\r\n          method : method , \r\n          url : 'http://127.0.0.1:8000/task/'+project_id ,\r\n          data :  DataForm\r\n      })\r\n      .then((response)=>{\r\n        set_task_id(response.data) ;\r\n      }) .catch(function (error) {\r\n          console.log(error)\r\n        });\r\n        setUpdate(!update)\r\n        console.log(method)\r\n      }\r\n\r\n      const cancel = ()=> {\r\n        set_task_ob(false)\r\n        set_x_marque(0)\r\n        setStep('')\r\n        setName('')\r\n        set_task_id(-1)\r\n        setDDL('')\r\n    }\r\n      \r\n\r\n      const save_task_exit =()=> {\r\n        handleSumbit_task()\r\n        cancel()\r\n      }\r\n\r\n      const save_add_steps = ()=> {\r\n        handleSumbit_task()\r\n        set_x_marque(2)\r\n\r\n      }\r\n      \r\n\r\n\r\n\r\n      const handle_edit_task = (ob,index)=> {\r\n        set_task_ob(true)\r\n        set_x_marque(1)\r\n        setName(ob?.['name'])\r\n        set_task_id(ob?.['id'])\r\n        setDDL(ob?.['DDL'])\r\n        setSteps_list(ob['step'])\r\n        set_task_edit_index(index)\r\n\r\n      } \r\n\r\n      const delete_task = async() => {\r\n        const DataForm= new FormData();\r\n        DataForm.append('id',task_id) \r\n        \r\n        \r\n        var method ='delete'     \r\n        await axios ({\r\n          method : method , \r\n          url : 'http://127.0.0.1:8000/task/0' ,\r\n          data :  DataForm\r\n      })\r\n      .then((response)=>{\r\n          console.log(response.data) ;\r\n          setUpdate(!update)\r\n          cancel()\r\n  \r\n        }) .catch(function (error) {\r\n          console.log(error)\r\n        });\r\n      }\r\n      \r\n    //   -------------- add steps --------------\r\n\r\n      const handleSumbit_steps  = async ()=> {\r\n        const DataForm= new FormData();\r\n        DataForm.append('name',step)        \r\n        DataForm.append('id',task_id)   \r\n        var method ='post'     \r\n        \r\n        \r\n        await axios ({\r\n          method : method , \r\n          url : 'http://127.0.0.1:8000/steps' ,\r\n          data :  DataForm\r\n      })\r\n      .then((response)=>{\r\n          console.log(response.data) ;\r\n      }) .catch(function (error) {\r\n          console.log(error)\r\n        });\r\n        setUpdate(!update)\r\n      }\r\n      \r\n      const save_step_exist =()=> {\r\n        handleSumbit_steps()\r\n        setStep('')\r\n        set_x_marque(0)\r\n      }\r\n      const save_step_add =()=> {\r\n        handleSumbit_steps()\r\n        setStep('')\r\n        \r\n    }\r\n\r\n\r\n\r\n    // ------- edit steps --------\r\n\r\n    const [step_edit_id , setStep_edit_id] = useState()\r\n    const [se_name , set_se_name] = useState('')\r\n    const [sync_index_step , set_sync_index_step] = useState(-1) \r\n \r\n    useEffect(()=>{\r\n      if (step_edit_id) {\r\n        set_se_name(step_edit_id['name'])\r\n\r\n      }\r\n    },[step_edit_id])\r\n\r\n    const sync_steps = (value)=> {\r\n      set_se_name(value)\r\n      steps_list[sync_index_step]['name'] = value \r\n      setSteps_list([...steps_list])\r\n\r\n    }\r\n\r\n\r\n    const save_step_edit=async(e)=> {\r\n      if (e.key == 'Enter' && step_edit_id) {\r\n        const DataForm= new FormData();\r\n        DataForm.append('id',step_edit_id['id'])        \r\n        DataForm.append('name',se_name)        \r\n        var method ='put'     \r\n        \r\n        \r\n        await axios ({\r\n          method : method , \r\n          url : 'http://127.0.0.1:8000/steps' ,\r\n          data :  DataForm\r\n      })\r\n      .then((response)=>{\r\n          console.log(response.data) ;\r\n          setStep_edit_id()\r\n          set_se_name('')\r\n          setUpdate(!update)\r\n\r\n        }) .catch(function (error) {\r\n          console.log(error)\r\n        });\r\n      }\r\n\r\n\r\n    }\r\n    // ------------ check step --------\r\n    const chekc_step =async(id,state)=> {\r\n      const DataForm= new FormData();\r\n      DataForm.append('id',id)               \r\n      DataForm.append('done',!state)\r\n      console.log('------sending-----')\r\n      \r\n      var method ='options'     \r\n      await axios ({\r\n        method : method , \r\n        url : 'http://127.0.0.1:8000/steps' ,\r\n        data :  DataForm\r\n    })\r\n    .then((response)=>{\r\n        console.log(response.data) ;\r\n        setUpdate(!update)\r\n\r\n      }) .catch(function (error) {\r\n        console.log(error)\r\n      });\r\n    }\r\n\r\n\r\n\r\n    // --------- delete step -----------\r\n\r\n    const delete_steps = async(id , index )=> {\r\n        const DataForm= new FormData();\r\n      DataForm.append('id',id)               \r\n\r\n      \r\n      var method ='delete'     \r\n      await axios ({\r\n        method : method , \r\n        url : 'http://127.0.0.1:8000/steps' ,\r\n        data :  DataForm\r\n    })\r\n    .then((response)=>{\r\n        console.log(response.data) ;\r\n        setUpdate(!update)\r\n        steps_list.splice(index , 1)\r\n        setSteps_list([...steps_list])\r\n\r\n      }) .catch(function (error) {\r\n        console.log(error)\r\n      });\r\n\r\n\r\n    }\r\n\r\n      var form \r\n      \r\n      switch(x_marque_bol){\r\n        case 1 :\r\n            form =  <div className='form_container center'>\r\n                        <div className='form center'  >\r\n                        <img className='x_marque' src={x_marque} onClick={()=>cancel()}  />\r\n                            <div className='box'>\r\n                              <div className='spacebetween'>\r\n                                  <p>Task name  </p>\r\n                                  {\r\n                                    task_ob ? \r\n                                      <img src={trash} onClick={()=>delete_task()} />\r\n                                    : <div></div>\r\n                                  }\r\n                              </div>\r\n                            <input value={name} onChange={(e)=>setName(e.target.value)}  />\r\n                            </div>\r\n                            <div className='box'>\r\n                            <p>Dead Line  </p>\r\n                            <input value={DDL} onChange={(e)=>setDDL(e.target.value)} type='date' />\r\n                            </div>\r\n                            <div className='btns'>\r\n                                <button onClick={()=>save_task_exit()} >Save & exit </button>\r\n                                <button onClick={()=> save_add_steps()}>+ steps</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            break ;\r\n        case 2 : \r\n            form =  <div className='form_container center'>\r\n                    <div className='form center'  >\r\n                    <img className='x_marque' src={x_marque} onClick={()=>cancel()}  />\r\n                        <div className='box'>\r\n                          <div className='spacebetween'>\r\n                            <div onClick={()=>set_x_marque(1)} className='add_task center'>\r\n                                <img src={left_arrow} className='back_arrow'  /> Back  // {name}\r\n                            </div>\r\n                            <div className='add_task center' onClick={()=>set_x_marque(3)}>\r\n                              steps list \r\n                            </div>\r\n\r\n                          </div>\r\n\r\n                        \r\n\r\n                        \r\n                        <input placeholder='next step' value={step} onChange={(e)=>setStep(e.target.value)}  />\r\n                        </div>\r\n                      \r\n                       \r\n                        <div className='btns'>\r\n                                <button onClick={()=>save_step_exist()} >Save & exit </button>\r\n                                <button onClick={()=>save_step_add()} >+ steps</button>\r\n                            </div>\r\n                     \r\n                    </div>\r\n                </div>\r\n\r\n            break ;\r\n        case 3 : \r\n        form = <div className='form_container center'>\r\n                    <div className='form center'  >\r\n                    <img className='x_marque' src={x_marque} onClick={()=>cancel()}  />\r\n                      <div onClick={()=>set_x_marque(2)} className='add_task center'>\r\n                    <div className='spacebetween'>\r\n                      <div></div>\r\n                    </div>\r\n                                <img src={left_arrow} className='back_arrow'  /> Back  // {name}\r\n                            </div>\r\n                        <div className='steps_list'>\r\n                          {\r\n                            steps_list.map((ob,i)=>\r\n                                <div className='bx spacebetween' key={i}>\r\n                                  {\r\n                                    (ob['id'] == step_edit_id?.['id'] )? \r\n\r\n                                    <input className='input_edit_step' onKeyDown={save_step_edit} value={se_name} onChange={(e)=>sync_steps(e.target.value)}  />\r\n\r\n                                    :\r\n                                    <>\r\n                                      <p> {ob['id'] == step_edit_id} {ob['name']}</p>\r\n                                      <div className='bt center'>\r\n                                        <img src={edit_btn} onClick={()=>{setStep_edit_id(ob);set_sync_index_step(i)}} />\r\n                                        <img src={trash} onClick={()=>delete_steps(ob['id'])} />\r\n                                    </div>\r\n                                    </>\r\n                                  }\r\n                                  \r\n                                </div>\r\n                            )\r\n                          }\r\n                         \r\n                        </div>                    \r\n                        {/* <div className='btns'>\r\n                            <button onClick={()=>save_step_exist()} >Save & exit </button>\r\n                            <button onClick={()=>save_step_add(2)} >+ steps</button>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n      }\r\n\r\n\r\n      console.log(data)\r\n      const today = new Date();\r\n      const calDate = (ddl)=> {\r\n        var state = 0\r\n        const deadline = new Date(ddl);\r\n        var days = Math.ceil((deadline.getTime() - today.getTime() ) / (1000 * 3600 * 24)) \r\n        if (days > 0 ) {\r\n          state = 1 \r\n        }\r\n        return [days,deadline.getDate() +'/'+ deadline.getMonth(),state]\r\n      }\r\n\r\n      return (\r\n    <div className='Project' >\r\n            {\r\n                x_marque_bol ?\r\n               form\r\n            : ''\r\n            }   \r\n\r\n         <a href='/' className='add_task center'>\r\n            <img src={left_arrow} className='back_arrow'  /> Back\r\n        </a>\r\n        <div className='header spacebetween'>\r\n            <div className='proj_name center'>\r\n                <h3> {data?.['name']} </h3>\r\n                <p className='perc center'> 25% <span>1/3</span>  </p>\r\n            </div>\r\n            <div className='DDL center'> \r\n                    {/* <p><span>DDL</span> in 09/01/2080</p>\r\n                    <img  src={edit_btn} /> */}\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className='add_task center' onClick={()=>set_x_marque(1)}>\r\n            <img src={adding}  /> Add task  \r\n        </div>\r\n            {\r\n                data?.['tasks'].map((ob,i)=>\r\n                \r\n                    <div className='task center' key={i}>\r\n                        <div className='container center'>\r\n                            <div className='taskname center'> {ob['name']}  <img src={edit_btn} onClick={()=>handle_edit_task(ob,i)} />  </div>\r\n                            <div className='perc center'>\r\n                               <p> {parseInt(ob['total_done'] / ob['total_steps'] * 100)}  % </p>\r\n                               <p className='smallD'> {ob['total_done']} /{ob['total_steps']}</p>  \r\n                               </div>\r\n                            <div className='perc center'>\r\n                              <p>{calDate(ob['DDL'])[0]} days</p>\r\n                              <p className='smallD'>{calDate(ob['DDL'])[1]}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='steps center'>\r\n                                {   \r\n                                    ob['step'].map((om,j)=>\r\n                                    \r\n                                    <p className={om['done']?'check center':'center'} onClick={()=>chekc_step(om['id'],om['done'])}  key={j}>{om['name']}</p>\r\n                                    )\r\n                                }\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Project",{"ruleId":"63","severity":1,"message":"64","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":12},{"ruleId":"63","severity":1,"message":"67","line":3,"column":17,"nodeType":"65","messageId":"66","endLine":3,"endColumn":25},{"ruleId":"63","severity":1,"message":"68","line":3,"column":28,"nodeType":"65","messageId":"66","endLine":3,"endColumn":37},{"ruleId":"69","severity":1,"message":"70","line":42,"column":11,"nodeType":"71","messageId":"72","endLine":51,"endColumn":12,"fix":"73"},{"ruleId":"69","severity":1,"message":"70","line":77,"column":15,"nodeType":"71","messageId":"72","endLine":86,"endColumn":16,"fix":"74"},{"ruleId":"75","severity":1,"message":"76","line":101,"column":19,"nodeType":"77","endLine":101,"endColumn":85},{"ruleId":"75","severity":1,"message":"76","line":107,"column":25,"nodeType":"77","endLine":107,"endColumn":69},{"ruleId":"75","severity":1,"message":"76","line":125,"column":13,"nodeType":"77","endLine":125,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":133,"column":17,"nodeType":"77","endLine":133,"endColumn":70},{"ruleId":"78","severity":1,"message":"79","line":22,"column":9,"nodeType":"80","endLine":22,"endColumn":17,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":28,"column":29,"nodeType":"84","messageId":"85","endLine":28,"endColumn":31},{"ruleId":"69","severity":1,"message":"70","line":53,"column":15,"nodeType":"71","messageId":"72","endLine":60,"endColumn":16,"fix":"86"},{"ruleId":"69","severity":1,"message":"70","line":108,"column":15,"nodeType":"71","messageId":"72","endLine":118,"endColumn":18,"fix":"87"},{"ruleId":"69","severity":1,"message":"70","line":132,"column":15,"nodeType":"71","messageId":"72","endLine":139,"endColumn":16,"fix":"88"},{"ruleId":"82","severity":1,"message":"89","line":180,"column":17,"nodeType":"84","messageId":"85","endLine":180,"endColumn":19},{"ruleId":"69","severity":1,"message":"70","line":187,"column":15,"nodeType":"71","messageId":"72","endLine":198,"endColumn":18,"fix":"90"},{"ruleId":"69","severity":1,"message":"70","line":213,"column":13,"nodeType":"71","messageId":"72","endLine":222,"endColumn":16,"fix":"91"},{"ruleId":"69","severity":1,"message":"70","line":237,"column":13,"nodeType":"71","messageId":"72","endLine":248,"endColumn":16,"fix":"92"},{"ruleId":"93","severity":1,"message":"94","line":257,"column":7,"nodeType":"95","messageId":"96","endLine":355,"endColumn":8},{"ruleId":"75","severity":1,"message":"76","line":261,"column":25,"nodeType":"77","endLine":261,"endColumn":92},{"ruleId":"75","severity":1,"message":"76","line":267,"column":39,"nodeType":"77","endLine":267,"endColumn":86},{"ruleId":"75","severity":1,"message":"76","line":287,"column":21,"nodeType":"77","endLine":287,"endColumn":88},{"ruleId":"75","severity":1,"message":"76","line":291,"column":33,"nodeType":"77","endLine":291,"endColumn":81},{"ruleId":"75","severity":1,"message":"76","line":318,"column":21,"nodeType":"77","endLine":318,"endColumn":88},{"ruleId":"75","severity":1,"message":"76","line":323,"column":33,"nodeType":"77","endLine":323,"endColumn":81},{"ruleId":"82","severity":1,"message":"89","line":330,"column":47,"nodeType":"84","messageId":"85","endLine":330,"endColumn":49},{"ruleId":"82","severity":1,"message":"89","line":336,"column":53,"nodeType":"84","messageId":"85","endLine":336,"endColumn":55},{"ruleId":"75","severity":1,"message":"76","line":338,"column":41,"nodeType":"77","endLine":338,"endColumn":122},{"ruleId":"75","severity":1,"message":"76","line":339,"column":41,"nodeType":"77","endLine":339,"endColumn":97},{"ruleId":"75","severity":1,"message":"76","line":379,"column":13,"nodeType":"77","endLine":379,"endColumn":61},{"ruleId":"75","severity":1,"message":"76","line":394,"column":13,"nodeType":"77","endLine":394,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":401,"column":77,"nodeType":"77","endLine":401,"endColumn":136},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"97","text":"98"},{"range":"99","text":"98"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["100"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"101","text":"98"},{"range":"102","text":"98"},{"range":"103","text":"98"},"Expected '===' and instead saw '=='.",{"range":"104","text":"98"},{"range":"105","text":"98"},{"range":"106","text":"98"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",[1315,1317],".",[2116,2118],{"desc":"107","fix":"108"},[1990,1992],[3251,3253],[3837,3839],[5283,5285],[5897,5899],[6511,6513],"Update the dependencies array to be: [getData, update]",{"range":"109","text":"110"},[697,705],"[getData, update]"]